name: GHL WAV downloader (cron)

on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ghl-wav-cron
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Instalar Playwright + dependencias
        run: |
          npm ci || npm i
          npx playwright install --with-deps chromium

      - name: Ejecutar script (descarga .wav)
        env:
          TARGET_URL: ${{ secrets.TARGET_URL }}
          MIN_MB: "1"
          WAIT_FOR: ${{ secrets.WAIT_FOR }}
          TIMEOUT_MS: "180000"
          DL_TIMEOUT_MS: "180000"
          HEADLESS: "true"
          SCROLL_ROUNDS: ${{ secrets.SCROLL_ROUNDS }}
          PAUSE_BETWEEN: "1200"
          START_DELAY_MS: "10000"
          COLLECT_RETRY: "1"
          COLLECT_RETRY_DELAY_MS: "5000"
          STORAGE_STATE_BASE64: ${{ secrets.STORAGE_STATE_BASE64 }}
          GHL_EMAIL: ${{ secrets.GHL_EMAIL }}
          GHL_PASSWORD: ${{ secrets.GHL_PASSWORD }}
          TOTP_SECRET: ${{ secrets.TOTP_SECRET }}
        run: node script.js

      - name: Subir outputs como artifact (backup)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: outputs/
          if-no-files-found: warn

      - name: Instalar rclone
        run: |
          curl -fsSL https://rclone.org/install.sh | sudo bash

      - name: Escribir credenciales de Service Account
        run: |
          printf "%s" '${{ secrets.GDRIVE_SA_JSON }}' > sa.json

      - name: Configurar rclone remoto "gdrive"
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
        run: |
          cat > rclone.conf <<EOF
          [gdrive]
          type = drive
          scope = drive
          service_account_file = ${GITHUB_WORKSPACE}/sa.json
          root_folder_id = ${GDRIVE_FOLDER_ID}
          EOF

      - name: Probar conexiÃ³n a Drive
        env:
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
        run: |
          echo "Usando root_folder_id=${GDRIVE_FOLDER_ID}"
          rclone lsd gdrive: --config ./rclone.conf || true

      - name: Subir outputs/ a Google Drive
        if: always()
        run: |
          if [ -d "outputs" ]; then
            rclone copy "outputs" "gdrive:" \
              --config ./rclone.conf \
              --transfers 4 --checkers 8 \
              --drive-chunk-size 64M \
              --drive-stop-on-upload-limit \
              --progress
          else
            echo "No hay carpeta outputs/ para subir."
          fi
